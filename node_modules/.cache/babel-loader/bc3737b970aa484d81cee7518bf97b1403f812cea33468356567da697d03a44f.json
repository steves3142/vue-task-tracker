{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AddTask = _resolveComponent(\"AddTask\");\n  var _component_Tasks = _resolveComponent(\"Tasks\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"])], 512 /* NEED_PATCH */), [[_vShow, $props.showAddTask]]), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_AddTask","onAddTask","$options","addTask","$props","showAddTask","_component_Tasks","onToggleReminder","toggleReminder","onDeleteTask","deleteTask","tasks","$data"],"sources":["/Users/steve/Documents/github/vue-task-tracker/src/views/Home.vue"],"sourcesContent":["<template>\n  <div v-show=\"showAddTask\">\n    <AddTask @add-task=\"addTask\" />\n  </div>\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\n\nexport default {\n  name: 'Home',\n  props: {\n    showAddTask: Boolean,\n  },\n  components: {\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n      tasks: [],\n    }\n  },\n  methods: {\n    async addTask(task) {\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      })\n\n      const data = await res.json()\n\n      this.tasks = [...this.tasks, data]\n    },\n    async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'DELETE',\n        })\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task')\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(updTask),\n      })\n\n      const data = await res.json()\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    },\n    async fetchTasks() {\n      const res = await fetch('api/tasks')\n\n      const data = await res.json()\n\n      return data\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`)\n\n      const data = await res.json()\n\n      return data\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n  },\n}\n</script>"],"mappings":";;;;6EACEA,mBAAA,CAEM,cADJC,YAAA,CAA+BC,kBAAA;IAArBC,SAAQ,EAAEC,QAAA,CAAAC;EAAO,uC,mCADhBC,MAAA,CAAAC,WAAW,E,GAGxBN,YAAA,CAIEO,gBAAA;IAHCC,gBAAe,EAAEL,QAAA,CAAAM,cAAc;IAC/BC,YAAW,EAAEP,QAAA,CAAAQ,UAAU;IACvBC,KAAK,EAAEC,KAAA,CAAAD"},"metadata":{},"sourceType":"module","externalDependencies":[]}