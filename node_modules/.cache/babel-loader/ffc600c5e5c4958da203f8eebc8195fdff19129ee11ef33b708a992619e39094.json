{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"header\", null, [_createElementVNode(\"h1\", null, _toDisplayString($props.title), 1 /* TEXT */), _createVNode(_component_Button, {\n    onToggleAddTask: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('toggle-add-task');\n    }),\n    text: $props.showAddTask ? 'Close' : 'AddTask',\n    color: $props.showAddTask ? 'red' : 'green'\n  }, null, 8 /* PROPS */, [\"text\", \"color\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","title","_createVNode","_component_Button","onToggleAddTask","_cache","$event","_ctx","$emit","text","showAddTask","color"],"sources":["/Users/steve/Documents/github/vue-task-tracker/src/components/Header.vue"],"sourcesContent":["<template>\n  <header>\n    <h1>{{ title }}</h1>\n    <Button \n    @toggle-add-task=\"$emit('toggle-add-task')\" \n    :text=\"showAddTask ? 'Close' : 'AddTask'\" \n    :color=\"showAddTask ? 'red' : 'green'\" \n    />\n  </header>\n</template>\n\n<script>\nimport Button from \"./Button\";\n\nexport default {\n  name: \"Header\",\n  props: {\n    title: String,\n    showAddTask: Boolean\n  },\n  components: {\n    Button,\n  },\n};\n</script>\n\n<style scoped>\n/*scoped aka only for this component*/\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n</style>"],"mappings":";;;uBACEA,mBAAA,CAOS,iBANPC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZC,YAAA,CAIEC,iBAAA;IAHDC,eAAe,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK;IAAA;IACtBC,IAAI,EAAET,MAAA,CAAAU,WAAW;IACjBC,KAAK,EAAEX,MAAA,CAAAU,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}